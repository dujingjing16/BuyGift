//
//  <%= klass.name %>+<%= property.cap_name %>.m
//  <%= klass.name %>+<%= property.cap_name %>
//
//  Copyright (c) 2015 Draveness. All rights reserved.
//
//  These files are generated by ruby script, if you want to modify code
//  in this file, you are supposed to update the ruby code, run it and
//  test it. And finally open a pull request.

#import "<%= klass.name %>+<%= property.cap_name %>.h"
#import "DKNightVersionManager.h"
#import "objc/runtime.h"

@interface <%= klass.name %> ()

@end

@implementation <%= klass.name %> (<%= property.cap_name %>)

- (UIColor *)night<%= property.cap_name %> {
    UIColor *nightColor = objc_getAssociatedObject(self, @selector(night<%= property.cap_name %>));
    if (nightColor) {
        return nightColor;
    } else if (self.normal<%= property.cap_name %>) {
        return self.normal<%= property.cap_name %>;
    } else {
        return self.<%= property.getter %>;
    }
}

- (void)setNight<%= property.cap_name %>:(UIColor *)night<%= property.cap_name %> {
    if ([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) {
        if (!self.normal<%= property.cap_name %>) {
            self.normal<%= property.cap_name %> = self.<%= property.getter %>;
        }
        [self <%= property.set_color_method("night" + property.cap_name) %>];
    } else {
        [self <%= property.set_color_method("self.normal" + property.cap_name) %>];
    }
    objc_setAssociatedObject(self, @selector(night<%= property.cap_name %>), night<%= property.cap_name %>, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

- (UIColor *)normal<%= property.cap_name %> {
    return objc_getAssociatedObject(self, @selector(normal<%= property.cap_name %>))<% if klass.name == 'UIBarButtonItem' && property.name == 'tintColor' %><%= '?: [UIColor blueColor]' %><% end %>;
}

- (void)setNormal<%= property.cap_name %>:(UIColor *)normal<%= property.cap_name %> {
    if ([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) {
        [self <%= property.set_color_method("normal" + property.cap_name) %>];
    } else {
        [self <%= property.set_color_method("self.night" + property.cap_name) %>];
    }
    objc_setAssociatedObject(self, @selector(normal<%= property.cap_name %>), normal<%= property.cap_name %>, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

@end
